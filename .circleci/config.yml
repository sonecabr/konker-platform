version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.7.0
 
jobs:
  javaartifacts:
    docker: 
      - image: circleci/openjdk:8-jdk-node
    steps:
      - checkout
      - run:
          name:  Install utitilties
          command: mvn clean install -pl  konker.utilities/pom.xml -DskipTests
      - run:
          name:  Install security
          command: mvn clean install -pl  konker.security/pom.xml -DskipTests
      - run:
          name:  Install services
          command: mvn clean install -DskipTests
      - save_cache:
          key: konkerjars
          paths:
            - /home/circleci/.m2/repository/com/konkerlabs
      

  dockerartifacts:
    docker: 
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - restore_cache:
          keys:
            - konkerjars
          paths:
            - /home/circleci/.m2/repository/com/konkerlabs
      - run:
          name: list artifacts
          command: ls -l /home/circleci/.m2/repository/com/konkerlabs/konker.registry.api/1.5.1.RELEASE
      - run:
          name: prepare for build container for api
          command: |
            mkdir -p konker.registry.api/docker-resources/dist 
            cp /home/circleci/.m2/repository/com/konkerlabs/konker.registry.api/1.5.1.RELEASE/konker.registry.api-1.5.1.RELEASE.jar konker.registry.api/docker-resources/dist/registry-api.jar
            ls -l konker.registry.api/docker-resources/
      - setup_remote_docker
      - run:
          name: build container for api
          command: |
            cd konker.registry.api
            docker build -t $AWS_ECR_ACCOUNT_URL/konker-registry/api:$CIRCLE_SHA1 .
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: false
          dockerfile: Dockerfile
          path: .
          region: AWS_REGION
          repo: konker-registry/api
          tag: "$CIRCLE_SHA1"
          
      #- run:
      #    name:  Install data core
      #    command: mvn clean install -pl  konker.registry.data.core/pom.xml -DskipTests
      #- run:
      #    name:  Install storage cassandra
      #    command: mvn clean install -pl  konker.registry.services.storage.cassandra/pom.xml -DskipTests
      #- run:
      #    name:  Install storage mongodb
      #   command: mvn clean install -pl  konker.registry.services.storage.mongodb/pom.xml -DskipTests
      #- run:
      #    name:  Install api 
      #    command: mvn clean install -pl  konker.registry.api/pom.xml -DskipTests
      #- run:
      #    name:  Install data 
      #    command: mvn clean install -pl  konker.registry.data/pom.xml -DskipTests
      #- run:
      #    name:  Install data processor 
      #   command: mvn clean install -pl  konker.registry.data.processor/pom.xml -DskipTests
      #- run:
      #    name:  Install web 
      #    command: mvn clean install -pl  konker.registry.web/pom.xml -DskipTests
      #- run:
      #    name:  Install IDM 
      #    command: mvn clean install -pl  konker.registry.idm.resourceserver/pom.xml -DskipTests

workflows:
  version: 2.1
  build_and_publish:
    jobs:
      - dockerartifacts
  #    requires: 
  #      - build/java
  
      


        
        
